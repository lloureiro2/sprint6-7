{
  "C:\\sprint6-7\\api-tts": {
    "versionSfCore": null,
    "versionFramework": "4.1.16",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {},
    "composeServiceName": null,
    "servicePath": "C:\\sprint6-7\\api-tts",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "api-tts",
      "frameworkVersion": "4.1.11",
      "provider": {
        "name": "aws",
        "runtime": "python3.9",
        "region": "us-east-1",
        "iam": {
          "role": {
            "statements": [
              {
                "Effect": "Allow",
                "Action": [
                  "dynamodb:GetItem",
                  "dynamodb:PutItem"
                ],
                "Resource": "arn:aws:dynamodb:us-east-1:905418439254:table/tabletts"
              },
              {
                "Effect": "Allow",
                "Action": [
                  "s3:PutObject"
                ],
                "Resource": "arn:aws:s3:::bucketemanuleo/*"
              },
              {
                "Effect": "Allow",
                "Action": [
                  "polly:SynthesizeSpeech"
                ],
                "Resource": "*"
              }
            ]
          }
        },
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            },
            "HealthLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/api-tts-dev-health"
              }
            },
            "V1DescriptionLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/api-tts-dev-v1Description"
              }
            },
            "TextUnderscoretoUnderscorespeechLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/api-tts-dev-text_to_speech"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "api-tts",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/api-tts-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/api-tts-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "dynamodb:GetItem",
                            "dynamodb:PutItem"
                          ],
                          "Resource": "arn:aws:dynamodb:us-east-1:905418439254:table/tabletts"
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "s3:PutObject"
                          ],
                          "Resource": "arn:aws:s3:::bucketemanuleo/*"
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "polly:SynthesizeSpeech"
                          ],
                          "Resource": "*"
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "api-tts",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "HealthLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/api-tts/dev/1721589902613-2024-07-21T19:25:02.613Z/api-tts.zip"
                },
                "Handler": "handler.health",
                "Runtime": "python3.9",
                "FunctionName": "api-tts-dev-health",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "HealthLogGroup"
              ]
            },
            "V1DescriptionLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/api-tts/dev/1721589902613-2024-07-21T19:25:02.613Z/api-tts.zip"
                },
                "Handler": "handler.v1_description",
                "Runtime": "python3.9",
                "FunctionName": "api-tts-dev-v1Description",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "V1DescriptionLogGroup"
              ]
            },
            "TextUnderscoretoUnderscorespeechLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/api-tts/dev/1721589902613-2024-07-21T19:25:02.613Z/api-tts.zip"
                },
                "Handler": "handler.text_to_speech",
                "Runtime": "python3.9",
                "FunctionName": "api-tts-dev-text_to_speech",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "TextUnderscoretoUnderscorespeechLogGroup"
              ]
            },
            "HealthLambdaVersionSCe3AFE2pjOTsVReoJnCEUSsQbRBhv768ZmurA": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "HealthLambdaFunction"
                },
                "CodeSha256": "HZWUPtjj0242JohC7yuzVYEB0rIDzJYa3/Kb6+F2zjE="
              }
            },
            "V1DescriptionLambdaVersionUJrtwdBG1HSK9aaLwsDC82KWvXrbYFjimiBN7ygB9Q": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "V1DescriptionLambdaFunction"
                },
                "CodeSha256": "HZWUPtjj0242JohC7yuzVYEB0rIDzJYa3/Kb6+F2zjE="
              }
            },
            "TextUnderscoretoUnderscorespeechLambdaVersiontdVTZwMv73TNMmco22MkSzZqrTNUlCketOtn0ANhc": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "TextUnderscoretoUnderscorespeechLambdaFunction"
                },
                "CodeSha256": "HZWUPtjj0242JohC7yuzVYEB0rIDzJYa3/Kb6+F2zjE="
              }
            },
            "HttpApi": {
              "Type": "AWS::ApiGatewayV2::Api",
              "Properties": {
                "Name": "dev-api-tts",
                "ProtocolType": "HTTP"
              }
            },
            "HttpApiStage": {
              "Type": "AWS::ApiGatewayV2::Stage",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "StageName": "$default",
                "AutoDeploy": true,
                "DefaultRouteSettings": {
                  "DetailedMetricsEnabled": false
                }
              }
            },
            "HealthLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "HealthLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationHealth": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "HealthLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRouteGet": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "GET /",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationHealth"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationHealth"
            },
            "V1DescriptionLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "V1DescriptionLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationV1Description": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "V1DescriptionLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRouteGetV1": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "GET /v1",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationV1Description"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationV1Description"
            },
            "TextUnderscoretoUnderscorespeechLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "TextUnderscoretoUnderscorespeechLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationTextUnderscoretoUnderscorespeech": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "TextUnderscoretoUnderscorespeechLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRoutePostV1Tts": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "POST /v1/tts",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationTextUnderscoretoUnderscorespeech"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationTextUnderscoretoUnderscorespeech"
            },
            "TTSTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "tabletts",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "unique_id",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "unique_id",
                    "KeyType": "HASH"
                  }
                ],
                "ProvisionedThroughput": {
                  "ReadCapacityUnits": 1,
                  "WriteCapacityUnits": 1
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "Export": {
                "Name": "sls-api-tts-dev-ServerlessDeploymentBucketName"
              }
            },
            "HealthLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "HealthLambdaVersionSCe3AFE2pjOTsVReoJnCEUSsQbRBhv768ZmurA"
              },
              "Export": {
                "Name": "sls-api-tts-dev-HealthLambdaFunctionQualifiedArn"
              }
            },
            "V1DescriptionLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "V1DescriptionLambdaVersionUJrtwdBG1HSK9aaLwsDC82KWvXrbYFjimiBN7ygB9Q"
              },
              "Export": {
                "Name": "sls-api-tts-dev-V1DescriptionLambdaFunctionQualifiedArn"
              }
            },
            "TextUnderscoretoUnderscorespeechLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "TextUnderscoretoUnderscorespeechLambdaVersiontdVTZwMv73TNMmco22MkSzZqrTNUlCketOtn0ANhc"
              },
              "Export": {
                "Name": "sls-api-tts-dev-TextUnderscoretoUnderscorespeechLambdaFunctionQualifiedArn"
              }
            },
            "HttpApiId": {
              "Description": "Id of the HTTP API",
              "Value": {
                "Ref": "HttpApi"
              },
              "Export": {
                "Name": "sls-api-tts-dev-HttpApiId"
              }
            },
            "HttpApiUrl": {
              "Description": "URL of the HTTP API",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "HttpApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "Export": {
                "Name": "sls-api-tts-dev-HttpApiUrl"
              }
            }
          }
        },
        "coreCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "health": {
          "handler": "handler.health",
          "events": [
            {
              "httpApi": {
                "path": "/",
                "method": "get"
              },
              "resolvedMethod": "GET",
              "resolvedPath": "/"
            }
          ],
          "name": "api-tts-dev-health",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "python3.9",
          "vpc": {},
          "versionLogicalId": "HealthLambdaVersionSCe3AFE2pjOTsVReoJnCEUSsQbRBhv768ZmurA"
        },
        "v1Description": {
          "handler": "handler.v1_description",
          "events": [
            {
              "httpApi": {
                "path": "/v1",
                "method": "get"
              },
              "resolvedMethod": "GET",
              "resolvedPath": "/v1"
            }
          ],
          "name": "api-tts-dev-v1Description",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "python3.9",
          "vpc": {},
          "versionLogicalId": "V1DescriptionLambdaVersionUJrtwdBG1HSK9aaLwsDC82KWvXrbYFjimiBN7ygB9Q"
        },
        "text_to_speech": {
          "handler": "handler.text_to_speech",
          "events": [
            {
              "httpApi": {
                "path": "/v1/tts",
                "method": "post"
              },
              "resolvedMethod": "POST",
              "resolvedPath": "/v1/tts"
            }
          ],
          "name": "api-tts-dev-text_to_speech",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "python3.9",
          "vpc": {},
          "versionLogicalId": "TextUnderscoretoUnderscorespeechLambdaVersiontdVTZwMv73TNMmco22MkSzZqrTNUlCketOtn0ANhc"
        }
      },
      "resources": {
        "Resources": {
          "TTSTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "tabletts",
              "AttributeDefinitions": [
                {
                  "AttributeName": "unique_id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "unique_id",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              }
            }
          }
        },
        "Outputs": {}
      }
    },
    "serviceRawFile": "service: api-tts\nframeworkVersion: \"4.1.11\"\n\nprovider:\n  name: aws\n  runtime: python3.9\n  region: us-east-1\n\n  iam:\n    role:\n      statements:\n        - Effect: Allow\n          Action:\n            - dynamodb:GetItem\n            - dynamodb:PutItem\n          Resource: arn:aws:dynamodb:us-east-1:905418439254:table/tabletts\n        - Effect: Allow\n          Action:\n            - s3:PutObject\n          Resource: arn:aws:s3:::bucketemanuleo/*\n        - Effect: Allow\n          Action:\n            - polly:SynthesizeSpeech\n          Resource: \"*\"\n\nfunctions:\n  health:\n    handler: handler.health\n    events:\n      - httpApi:\n          path: /\n          method: get\n\n  v1Description:\n    handler: handler.v1_description\n    events:\n      - httpApi:\n          path: /v1\n          method: get\n\n  text_to_speech:\n    handler: handler.text_to_speech\n    events:\n      - httpApi:\n          path: /v1/tts\n          method: post\n\nresources:\n  Resources:\n    TTSTable:\n      Type: AWS::DynamoDB::Table\n      Properties:\n        TableName: tabletts\n        AttributeDefinitions:\n          - AttributeName: unique_id\n            AttributeType: S\n        KeySchema:\n          - AttributeName: unique_id\n            KeyType: HASH\n        ProvisionedThroughput:\n          ReadCapacityUnits: 1\n          WriteCapacityUnits: 1",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": null,
    "params": {},
    "machineId": "acc9ea2ce8145a32e66386162dec4bc2",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "31f35319-8437-44b8-9fea-7616f31353e5",
    "orgName": "leonardoloureiro",
    "userId": "QD0k3R3NhjVmZdKNVH",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "leonardoloureiro",
    "subscription": null,
    "userEmail": "lloureiro44@gmail.com",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "905418439254",
    "versionSf": "4.1.16",
    "serviceProviderAwsCfStackName": "api-tts-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:905418439254:stack/api-tts-dev/ee664140-4796-11ef-a829-0affdda30845",
    "serviceProviderAwsCfStackCreated": "2024-07-21T19:25:04.362Z",
    "serviceProviderAwsCfStackUpdated": "2024-07-21T19:25:34.953Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "V1DescriptionLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:905418439254:function:api-tts-dev-v1Description:2",
        "Description": "Current Lambda function version",
        "ExportName": "sls-api-tts-dev-V1DescriptionLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "TextUnderscoretoUnderscorespeechLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:905418439254:function:api-tts-dev-text_to_speech:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-api-tts-dev-TextUnderscoretoUnderscorespeechLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "HealthLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:905418439254:function:api-tts-dev-health:2",
        "Description": "Current Lambda function version",
        "ExportName": "sls-api-tts-dev-HealthLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "HttpApiId",
        "OutputValue": "oowqbdu26j",
        "Description": "Id of the HTTP API",
        "ExportName": "sls-api-tts-dev-HttpApiId"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "api-tts-dev-serverlessdeploymentbucket-h1cqwxsktccz",
        "ExportName": "sls-api-tts-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "HttpApiUrl",
        "OutputValue": "https://oowqbdu26j.execute-api.us-east-1.amazonaws.com",
        "Description": "URL of the HTTP API",
        "ExportName": "sls-api-tts-dev-HttpApiUrl"
      }
    ]
  }
}